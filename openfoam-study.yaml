description:
    name: openfoam-parameter-study
    description: A parameter study that includes initializing, running, post-processing, collecting, and vizualizing runs

env:
    variables:
        WORKSPACE_HOME: /Users/mubarka1/march-tutorial
        OUTPUT_PATH: $(WORKSPACE_HOME)/running-simulation-output
        MERLIN_PATH: $(WORKSPACE_HOME)/merlin-venv/bin/python

        CAVITY_DIR: /opt/openfoam6/tutorials/incompressible/icoFoam/cavity/cavity
        HEIGHT: 10
        WIDTH: 10
        RESOLUTION: 30
        END_TIME: 1
        WRITE_INTERVAL: 0.1
        N_SAMPLES: 100
        DEBUG: 1
        SAMPLE_TYPE: 'random'

study:
    - name: copy-cavity-directory
      description: copying the cavity directory from docker container
      run:
        cmd: |
          docker create -ti --name temp-container cfdengine/openfoam bash
          docker cp temp-container:$(CAVITY_DIR) .
          docker rm -f temp-container
        task_queue: simulation_queue

    - name: run-openfoam-ico
      description: Runs OpenFOAM using the icoFoam solver
      run:
        cmd: |
            cp -r $(copy-cavity-directory.workspace)/cavity cavity/
            cd cavity

            echo "***** Setting Up Mesh *****"
            $(MERLIN_PATH) $(SPECROOT)/scripts/mesh-param-script.py -x $(WIDTH) -y $(HEIGHT)  -r $(RESOLUTION) -p 0 -scripts_dir $(SPECROOT)/scripts/
            mv blockMeshDict.txt system/blockMeshDict
            sed -i '' "30s/.*/writeControl    runTime;/" system/controlDict
            sed -i '' "26s/.*/endTime         $(END_TIME);/" system/controlDict
            sed -i '' "32s/.*/writeInterval   $(WRITE_INTERVAL);/" system/controlDict
            sed -i '' "18s/.*/nu              [0 2 -1 0 0 0 0] $(VISCOSITY);/" constant/transportProperties
            sed -i '' "26s/.*/        value           uniform ($(LID_SPEED) 0 0);/" 0/U
            echo "***** Done Setting Up Mesh *****"

            cd ..
            cp $(SPECROOT)/run-openfoam .

            docker container run -ti --rm -v $(pwd):/cavity -w /cavity cfdengine/openfoam ./run-openfoam $(LID_SPEED)

            echo 'done'
        task_queue: simulation_queue
        depends: [copy-cavity-directory]

    - name: combine-outputs
      description: Combine the outputs of the previous step
      run:
        cmd: |
            echo $(MERLIN_PATHS_ALL)
            echo $(MERLIN_PATHS_ALL) > out
            echo $(run-openfoam-ico.workspace)
        task_queue: simulation_queue
        depends: [run-openfoam-ico*]


merlin:
    resources:
        task_server: celery
        overlap: False
        workers:
            all:
                args: -l INFO --concurrency 10 --prefetch-multiplier 1 -Ofair
    samples:
        generate:
             cmd: $(MERLIN_PATH) $(SPECROOT)/scripts/make-samples.py -n $(N_SAMPLES) -outfile=$(MERLIN_INFO)/samples -debug $(DEBUG) -re 1 1000 -U 0.1 100 -sample_type $(SAMPLE_TYPE)
        file: $(MERLIN_INFO)/samples.npy
        column_labels: [LID_SPEED, VISCOSITY]
        level_max_dirs: 25
